// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String
  fullname       String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  // Relation : Produits vendus
  productsSold   Product[] @relation("SellerProducts")

  // Relation : Produits achetés (many-to-many)
  productsBought ProductPurchase[]
}


model ProductPurchase {
  user      User    @relation(fields: [userId], references: [id])
  userId    String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  quantity  Int // Quantité achetée
  createdAt DateTime @default(now())

  @@id([userId, productId]) // Clé primaire composite
}


model Product {
  id          String  @id @default(uuid())
  name        String
  price       Float
  stock       Int
  description String
  category	  String @default("Autre")
  status	  String @default("enabled")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relation avec le vendeur (User)
  seller     User   @relation("SellerProducts", fields: [sellerId], references: [id])
  sellerId   String 

  // Relation avec les acheteurs (many-to-many)
  purchases ProductPurchase[]
}

